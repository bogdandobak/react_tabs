{"version":3,"sources":["components/Tabs/Tabs.jsx","components/TabsContent/TabsContent.jsx","App.js","index.js"],"names":["Tabs","tabs","handleSelectedTab","selectedTabId","className","map","tab","classNames","id","type","key","onClick","title","TabsContent","content","defaultProps","App","state","setState","this","selectedTab","find","React","Component","ReactDOM","render","document","getElementById"],"mappings":"ySAKaA,G,MAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,kBAAmBC,EAA5B,EAA4BA,cAA5B,OAClB,oCACE,yBAAKC,UAAU,aACZH,EAAKI,KAAI,SAAAC,GAAG,OACX,4BACEF,UAAWG,IACT,iBACA,CAAE,yBAA0BJ,IAAkBG,EAAIE,KAEpDC,KAAK,SACLC,IAAKJ,EAAIE,GACTG,QAAS,kBAAMT,EAAkBI,EAAIE,MAEpCF,EAAIM,cCdFC,G,MAAc,SAAC,GAAD,IAAGP,EAAH,EAAGA,IAAH,OACzB,yBAAKF,UAAU,WACZE,GAAOA,EAAIQ,WAUhBD,EAAYE,aAAe,CACzBT,IAAK,MCVP,IAAML,EAAO,CACX,CAAEO,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,gBAqC3BE,E,4MAhCbC,MAAQ,CACNd,cAAeF,EAAK,GAAGO,I,EAGzBN,kBAAoB,SAACM,GACnB,EAAKU,SAAS,CACZf,cAAeK,K,4CAInB,WAAU,IACAL,EAAkBgB,KAAKF,MAAvBd,cACFiB,EAAcnB,EAAKoB,MAAK,SAAAf,GAAG,OAAIA,EAAIE,KAAOL,KAEhD,OACE,yBAAKC,UAAU,OACb,sDACsBD,IAEtB,kBAAC,EAAD,CACEF,KAAMA,EACNC,kBAAmBiB,KAAKjB,kBACxBC,cAAeA,IAEjB,kBAAC,EAAD,CACEG,IAAKc,S,GA1BGE,IAAMC,W,MCTxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e7b84b83.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Tabs.scss';\n\nexport const Tabs = ({ tabs, handleSelectedTab, selectedTabId }) => (\n  <>\n    <div className=\"container\">\n      {tabs.map(tab => (\n        <button\n          className={classNames(\n            'container__tab',\n            { 'container__tab--active': selectedTabId === tab.id },\n          )}\n          type=\"button\"\n          key={tab.id}\n          onClick={() => handleSelectedTab(tab.id)}\n        >\n          {tab.title}\n        </button>\n      ))}\n    </div>\n\n  </>\n);\n\nTabs.propTypes = {\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  selectedTabId: PropTypes.string.isRequired,\n  handleSelectedTab: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TabsContent.scss';\n\nexport const TabsContent = ({ tab }) => (\n  <div className=\"content\">\n    {tab && tab.content}\n  </div>\n);\n\nTabsContent.propTypes = {\n  tab: PropTypes.shape({\n    content: PropTypes.string.isRequired,\n  }),\n};\n\nTabsContent.defaultProps = {\n  tab: null,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { TabsContent } from './components/TabsContent';\n\n/* eslint-disable */\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n/* eslint-enable */\n\nclass App extends React.Component {\n  state = {\n    selectedTabId: tabs[0].id,\n  }\n\n  handleSelectedTab = (id) => {\n    this.setState({\n      selectedTabId: id,\n    });\n  }\n\n  render() {\n    const { selectedTabId } = this.state;\n    const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {`Selected tab is ${selectedTabId}`}\n        </h1>\n        <Tabs\n          tabs={tabs}\n          handleSelectedTab={this.handleSelectedTab}\n          selectedTabId={selectedTabId}\n        />\n        <TabsContent\n          tab={selectedTab}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}